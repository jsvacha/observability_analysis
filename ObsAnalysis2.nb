(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    114236,       2414]
NotebookOptionsPosition[     60192,       1463]
NotebookOutlinePosition[    106511,       2317]
CellTagsIndexPosition[    106468,       2314]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"Observability", "  ", "Analysis"}], "Title"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.857760206972104*^9, 3.8577602268509517`*^9}, {
  3.867000474574087*^9, 3.8670004841124563`*^9}, {3.867004779424721*^9, 
  3.8670047812485*^9}},ExpressionUUID->"2b308678-3604-43aa-ae10-741b584ac491"],

Cell["Author: James Svacha (jsvacha@seas.upenn.edu)", "Text",
 CellChangeTimes->{{3.751117946916654*^9, 3.751117948521515*^9}, {
  3.7511179874061403`*^9, 
  3.751118000478374*^9}},ExpressionUUID->"80ef05ea-2dd7-4bad-bb24-\
a63a1d5e7b62"],

Cell["\<\
This Mathematica document carries out the observability analysis introduced \
in our work, 
\[OpenCurlyDoubleQuote]Imu-Based Inertia Estimation for a Quadrotor Using \
newton-Euler Dynamics\[CloseCurlyDoubleQuote]. \
\>", "Text",
 CellChangeTimes->{{3.751113106398714*^9, 3.751113191979947*^9}, {
  3.75111772611495*^9, 3.751117726375012*^9}, {3.867005479944726*^9, 
  3.86700550726188*^9}},ExpressionUUID->"3d680064-25c7-40bd-b279-\
94f51fe1e624"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.857761581235461*^9, 3.857761582211755*^9}, {
   3.857761928218252*^9, 3.8577619847168756`*^9}, 3.857788470988606*^9},
 CellLabel->
  "In[3164]:=",ExpressionUUID->"38b72558-f8d6-4a2d-bbec-e5e7273bebce"],

Cell[TextData[StyleBox["User-Defined Variables", "Section"]], "Section",
 CellChangeTimes->{{3.857792069917987*^9, 3.857792086477813*^9}, {
  3.857792147959855*^9, 3.857792159234144*^9}, {3.8577935840461483`*^9, 
  3.8577935969011183`*^9}, {3.857794320595767*^9, 3.857794322307343*^9}, {
  3.8669997431938953`*^9, 
  3.866999755721271*^9}},ExpressionUUID->"d3692466-f00a-4be7-9fa2-\
58614f963091"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Rotation Parameterization", "Subsection"]], "Section",
 CellChangeTimes->{{3.751113576290595*^9, 
  3.7511135817982063`*^9}},ExpressionUUID->"a4bb7b95-2a76-4708-9828-\
eeb01f539d1c"],

Cell["\<\
This subsection carries out the rotation parameterization, with the goal \
being to define the rotation matrix\
\>", "Text",
 CellChangeTimes->{{3.751113586133277*^9, 3.7511136138659773`*^9}, {
  3.7511140439982452`*^9, 3.751114045313675*^9}, {3.867004865417781*^9, 
  3.8670048667675657`*^9}},ExpressionUUID->"4d0aefaf-f308-4361-a322-\
92dbc4cb4f42"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"s1", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"s1", "[", "t", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"s2", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}], ",", 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"s2", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"s1", "[", "t", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"s2", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"s1", "[", "t", "]"}], "^", "2"}], "-", 
         RowBox[{
          RowBox[{"s2", "[", "t", "]"}], "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"s1", "[", "t", "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"s2", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}], "}"}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"body", "-", 
    RowBox[{
    "fixed", " ", "z", " ", "vector", " ", "in", " ", "local", " ", "yawed", 
     " ", "frame"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726328002756528*^9, 3.726328006281311*^9}, {
   3.726328328878016*^9, 3.726328405909541*^9}, 3.7263325650679703`*^9, {
   3.7263407232138*^9, 3.726340752754017*^9}, {3.744910717398081*^9, 
   3.744910771764844*^9}, {3.745162521049766*^9, 3.745162521068636*^9}, {
   3.751113329013053*^9, 3.751113403089953*^9}, {3.751114130472727*^9, 
   3.751114157826323*^9}, {3.751550057917221*^9, 3.751550079797533*^9}},
 CellLabel->
  "In[3165]:=",ExpressionUUID->"7724a05c-48bb-404d-a219-011a446cd0cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ctilt", "=", 
    RowBox[{"z", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"cosine", " ", "of", " ", "tilt", " ", "angle"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7263284269280987`*^9, 3.726328457828991*^9}, 
   3.726332566960198*^9, {3.751113408278281*^9, 3.7511134233389482`*^9}, {
   3.7511136712062597`*^9, 3.751113682211027*^9}},
 CellLabel->
  "In[3166]:=",ExpressionUUID->"b83e0dc7-5a3c-4ad7-baef-3e4e3b85a345"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stiltaxis", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "z"}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "sine", " ", "of", " ", "tilt", " ", "angle", " ", "multiplied", " ", "by",
     " ", "tilt", " ", "axis"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726328566590226*^9, 3.7263285960659237`*^9}, 
   3.726329277853959*^9, 3.7263325679014072`*^9, {3.7511136682907763`*^9, 
   3.751113697423993*^9}, {3.7561293897486343`*^9, 3.756129390266486*^9}},
 CellLabel->
  "In[3167]:=",ExpressionUUID->"d22127b0-7015-423b-9c03-d22b070ddba2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stilt", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"stiltaxis", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"stiltaxis", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "]"}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"sine", " ", "of", " ", "tilt", " ", "angle"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.72632860286331*^9, 3.726328629650052*^9}, {
   3.72632892584408*^9, 3.726328929756547*^9}, {3.72632911083419*^9, 
   3.7263291113318987`*^9}, {3.7263292834378223`*^9, 3.7263292873112593`*^9}, 
   3.726332568876371*^9, {3.75111370018631*^9, 3.751113711596677*^9}, {
   3.756129421277294*^9, 3.756129425527014*^9}},
 CellLabel->
  "In[3168]:=",ExpressionUUID->"24bc4cbd-efb1-43e1-bd2f-6c34f42b1cc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"axis", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"stiltaxis", "/", "stilt"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"tilt", " ", "axis"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726328942595022*^9, 3.7263289570932837`*^9}, {
   3.726329100832108*^9, 3.7263291014747963`*^9}, {3.726329293728526*^9, 
   3.726329298995756*^9}, 3.726332570055925*^9, {3.751113718947773*^9, 
   3.751113732555915*^9}, {3.75612938522118*^9, 3.756129386204925*^9}, {
   3.7561294176774893`*^9, 3.7561294182286873`*^9}},
 CellLabel->
  "In[3169]:=",ExpressionUUID->"e27dc6cb-c033-4517-9248-cdb2872beedb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"axishat", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         RowBox[{"axis", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"axis", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"axis", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"axis", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"axis", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"axis", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]}], "}"}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"skew", "-", 
    RowBox[{"symmetric", " ", "tilt", " ", "axis"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726329692316956*^9, 3.72632972948598*^9}, 
   3.7263325723178596`*^9, {3.751113735659533*^9, 3.751113742833522*^9}, {
   3.756129395080464*^9, 3.756129412860523*^9}},
 CellLabel->
  "In[3170]:=",ExpressionUUID->"c36491c2-f2b8-486f-8eb4-4b31e919a46a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rtilt", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "3", "]"}], "+", 
      RowBox[{"stilt", "*", "axishat"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "ctilt"}], ")"}], "*", 
       RowBox[{"axishat", ".", "axishat"}]}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"tilt", " ", "rotation", " ", "matrix"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726329739465176*^9, 3.726329786898654*^9}, 
   3.726332576648033*^9, {3.726343387379507*^9, 3.7263433880497913`*^9}, {
   3.751113745218272*^9, 3.751113758933857*^9}, {3.751114187697257*^9, 
   3.7511141884746323`*^9}, {3.7561294382682047`*^9, 3.7561294454168453`*^9}},
 CellLabel->
  "In[3171]:=",ExpressionUUID->"2af9b222-579a-4b35-ab74-1c966026508b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ryaw", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"yaw", " ", "rotation", " ", "matrix"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7449061838714113`*^9, 3.744906215148142*^9}, {
  3.7449107847807302`*^9, 3.744910808353245*^9}, {3.7451625210889273`*^9, 
  3.745162521096199*^9}, {3.7511137617055483`*^9, 3.751113762900281*^9}, {
  3.7511137987872047`*^9, 3.75111380355768*^9}, {3.75111416931253*^9, 
  3.751114170211876*^9}, {3.7515501859358253`*^9, 3.751550194804178*^9}},
 CellLabel->
  "In[3172]:=",ExpressionUUID->"6830e553-1075-4394-80c5-820ace3d82cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"ryaw", ".", "rtilt"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"rotation", " ", "of", " ", "body"}], "-", 
    RowBox[{
    "fixed", " ", "frame", " ", "relative", " ", "to", " ", "inertial", " ", 
     "frame"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.744906259859878*^9, 3.7449062625214243`*^9}, {
  3.751113764885634*^9, 3.751113794364747*^9}, {3.751114057106688*^9, 
  3.751114064042938*^9}, {3.75111417305726*^9, 3.751114178030452*^9}, {
  3.751551963280176*^9, 3.7515519641999197`*^9}, {3.751552099644808*^9, 
  3.751552100154354*^9}},
 CellLabel->
  "In[3173]:=",ExpressionUUID->"d8687452-0f60-4f72-8e36-82a667523588"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Other State Definitions\t", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}},ExpressionUUID->"8a3902a4-6402-46b3-b8de-\
72f105469d87"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "=", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"velocity", " ", "in", " ", "body"}], "-", 
    RowBox[{"fixed", " ", "frame"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.756038256315696*^9, 3.7560382590566597`*^9}, {
  3.7560383961004543`*^9, 3.756038422132881*^9}, {3.7640819219712152`*^9, 
  3.76408192941387*^9}},
 CellLabel->
  "In[3174]:=",ExpressionUUID->"d8e5eb82-4f22-49f9-8d29-886b24a67967"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s1", "[", "t", "]"}], ",", 
      RowBox[{"s2", "[", "t", "]"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", "tilt", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7560384242704983`*^9, 3.756038432119256*^9}, {
  3.75612933473448*^9, 3.756129356859383*^9}, {3.7561294649133263`*^9, 
  3.7561294753718023`*^9}, {3.756488017666177*^9, 3.756488018336054*^9}, {
  3.764081933945239*^9, 3.764081940157769*^9}},
 CellLabel->
  "In[3175]:=",ExpressionUUID->"64726bf9-227e-4072-b559-f999fa626dcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]", "=", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"angular", " ", "velocity", " ", "in", " ", "body"}], "-", 
    RowBox[{"fixed", " ", "frame"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.756038495050561*^9, 3.756038505943391*^9}, {
  3.758394449354969*^9, 3.758394452524693*^9}, {3.764081942663619*^9, 
  3.764081948290097*^9}},
 CellLabel->
  "In[3176]:=",ExpressionUUID->"01f82bc7-6faf-44f6-8615-6fed6f9791a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"u", "=", 
    RowBox[{"{", 
     RowBox[{"u1", ",", "u2", ",", "u3", ",", "u4"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"motor", " ", "speeds"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.773050325430316*^9, 3.773050336025105*^9}},
 CellLabel->
  "In[3177]:=",ExpressionUUID->"644c0d5e-273d-49c6-a2ce-a3d65c7fc661"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"uc", "=", 
    RowBox[{"{", 
     RowBox[{"uc1", ",", "uc2", ",", "uc3", ",", "uc4"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"commanded", " ", "motor", " ", "speeds"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7730594976766787`*^9, 3.773059508362225*^9}, 
   3.773413187752129*^9, {3.774432506891797*^9, 3.774432514915926*^9}},
 CellLabel->
  "In[3178]:=",ExpressionUUID->"e7da03a4-44c2-4dc9-af7d-f625e6eef33c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ba", "=", 
    RowBox[{"{", 
     RowBox[{"ba1", ",", "ba2", ",", "ba3"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"accelerometer", " ", "biases"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7560385071468697`*^9, 3.75603854263475*^9}, {
  3.764081950595828*^9, 3.764081956108425*^9}, {3.772233994839323*^9, 
  3.77223400056866*^9}, {3.772234057399021*^9, 3.7722340578249187`*^9}},
 CellLabel->
  "In[3179]:=",ExpressionUUID->"7d510011-c0bd-409b-ab4b-d27cab5ffb09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bg", "=", 
    RowBox[{"{", 
     RowBox[{"bg1", ",", "bg2", ",", "bg3"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"gyro", " ", "biases"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.772234044625885*^9, 3.772234050396096*^9}, {
  3.772234143252591*^9, 3.7722341474459763`*^9}},
 CellLabel->
  "In[3180]:=",ExpressionUUID->"92e7f78e-5e12-4462-954b-9c8120dbc2ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"j", "=", 
    RowBox[{"{", 
     RowBox[{"j1", ",", "j2", ",", "j3"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"moment", " ", "of", " ", "inertia"}], ",", " ", 
    RowBox[{"assumed", " ", "to", " ", "be", " ", "diagonal"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.75603855751206*^9, 3.756038571758994*^9}, 
   3.756038602400381*^9, {3.764081958099469*^9, 3.764081980988415*^9}, {
   3.774432720837294*^9, 3.774432736539721*^9}},
 CellLabel->
  "In[3181]:=",ExpressionUUID->"5b86c5a7-8159-4687-81c6-ffd94b60d3f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jmat", "=", 
    RowBox[{"DiagonalMatrix", "[", "j", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"moment", " ", "of", " ", "inertia", " ", "tensor"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.756040876346002*^9, 3.756040885982601*^9}, {
  3.764081985219858*^9, 3.764081989886745*^9}, {3.7640821307627163`*^9, 
  3.764082155645227*^9}, {3.7744327400373917`*^9, 3.774432744134184*^9}},
 CellLabel->
  "In[3182]:=",ExpressionUUID->"7fe84d8b-cbcc-4b86-9dfe-3e539c0d0240"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pcot", "=", 
    RowBox[{"{", 
     RowBox[{"xcot", ",", "ycot", ",", "0"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "position", " ", "of", " ", "the", " ", "center", " ", "of", " ", "thrust",
     " ", "rel", " ", "to", " ", "COM"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7722358793522997`*^9, 3.772235890967772*^9}, {
   3.772273272240999*^9, 3.772273273412999*^9}, {3.772274169671033*^9, 
   3.772274170800886*^9}, {3.773051491666314*^9, 3.773051492496552*^9}, {
   3.7730592731002493`*^9, 3.773059274570023*^9}, 3.774432723163067*^9, {
   3.7744327615816936`*^9, 3.774432785893888*^9}, {3.774603986643977*^9, 
   3.774603988000957*^9}},
 CellLabel->
  "In[3183]:=",ExpressionUUID->"dc8168d6-1d7e-43b6-ad0e-95eeac68df3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pimu", "=", 
    RowBox[{"{", 
     RowBox[{"ximu", ",", "yimu", ",", "zimu"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "position", " ", "of", " ", "IMU", " ", "rel", " ", "to", " ", "COM"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7744327576076813`*^9, 3.774432779899979*^9}, {
  3.7746039772695093`*^9, 3.774603982058536*^9}},
 CellLabel->
  "In[3184]:=",ExpressionUUID->"368851d9-91e2-47b7-8098-edbb0c301477"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", 
    RowBox[{"{", 
     RowBox[{
     "xcot", ",", "ycot", ",", "ximu", ",", "yimu", ",", "zimu", ",", "j1", 
      ",", "j2", ",", "j3", ",", "mass", ",", "kd", ",", "kz", ",", "kflap", 
      ",", "k\[Tau]", ",", "jb"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"vector", " ", "of", " ", "all", " ", "parameters"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwlzn0s1HEABvDzlvKSvJUd42zGZUfCOa1c+6EmqWRRq8YSmx1bLLZqom53
kZWNpt3cNBRDXgrjyNydvKR2x2pkqMhLXn6SmFRM3+fbH88+/zx79rjGX4tK
NORwOIdI4FeeZYDt5iJzPGojEEbf9CyHUqWIOng2QCveXmR4q0FU96XStKPE
7osV/3VfWZwljgxdYGH3wRuVBRyW8Y9+SM3tNF+B0sCwVThdo/sLVc7OWzBU
nrKzkOj0SW0BazOMdPXE1pAdVF+jPpcGYrkqgQdDc+194Vwsn3q5Y18EdLOc
pPrI/GPg7Pw0NSJVcqaRyJkxj4RVS+0hrUTrakEotHdyLR3Djj6Jauzh1QT5
6UJqM9cnX2RA/ha2UMVsxmOYWlZA5d/d/eKnKcsYaI0a4Wbw6Aicla5RTZ6Z
VEvMWUa/V1kDtztnVHCNHWmDgncCNVQo0l5DlaRtGrY7v6Im2HreTybaWEup
eSpdG8yqe08tesDVwHqliPpjPi7mCpdlnigHz8Oiqc470Hv5C7U2cdf6GvFw
6x/qB7vg4nVip/B6CSz+7eX9C70qCfVp/SMhlI/7BkCnl1UK2MUbpvrXtzTC
UUtxE7QJO9IOs+1uU92i49VwQRGigRXrVj2Qe8D0LewPSx+CKXHWw9A79OMo
zBnYnIB7ZPJZeCzR7xs0DvJYhuJuEXX/eIXZBnHCKt0C5pdMnTRzZJn1vthT
0PCEthaea3avg1lNGjW81ddDXegKb5A7sYyRw3PqpEOOBvbOC7RQ9kZ2+h7x
e0dmJPxco+XmEcsljo7Qr9I+H4b78ai9yf1K6DCmo+q3A8v5LiyjEZZVQH1l
xgBMmtsahD7ZJlcziVVRl6j/ADeLxT4=
  "],
 CellLabel->
  "In[3185]:=",ExpressionUUID->"eb4737d9-957c-4f70-9ff9-bf84de2bbb2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dragmat", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"kd", ",", "kd", ",", "kz"}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Drag", " ", "matrix"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7560392205842752`*^9, 3.756039256662672*^9}, 
   3.756039384936705*^9, {3.764082007646057*^9, 3.764082011196905*^9}},
 CellLabel->
  "In[3186]:=",ExpressionUUID->"846aa666-d97f-4d6e-996e-3fc13b821cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]hat", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "\[Omega]3"}], ",", "\[Omega]2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Omega]3", ",", "0", ",", 
        RowBox[{"-", "\[Omega]1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Omega]2"}], ",", "\[Omega]1", ",", "0"}], "}"}]}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Lie", " ", "algebra", " ", "so", 
    RowBox[{"(", "3", ")"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7560393203851233`*^9, 3.7560393823896503`*^9}, {
  3.756039644298888*^9, 3.756039646662999*^9}, {3.764082013346195*^9, 
  3.764082027600127*^9}, {3.764082248862431*^9, 3.7640822499283257`*^9}},
 CellLabel->
  "In[3187]:=",ExpressionUUID->"cfcf1c8b-2cee-4af0-9896-3fa04c578608"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"e3", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"3", "rd", " ", "standard", " ", "basis", " ", "vector"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.756039824491025*^9, {3.764082030130521*^9, 3.764082041478504*^9}, {
   3.76408210814128*^9, 3.764082111793354*^9}},
 CellLabel->
  "In[3188]:=",ExpressionUUID->"ce74213e-cf80-4481-b83d-2ce8f856c89b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Positions of Motor Hubs ", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}, 
   3.8670057834637613`*^9},ExpressionUUID->"2c727320-585d-4ced-bdf4-\
d7ba8af7cc34"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d1", "=", 
    RowBox[{"pcot", "+", 
     RowBox[{"{", 
      RowBox[{"dx", ",", "dy", ",", "0"}], "}"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Motor", " ", "1", " ", "relative", " ", "to", " ", "com"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.756039484564044*^9, 3.756039513204116*^9}, 
   3.7560395510468063`*^9, {3.756039804360374*^9, 3.7560398045748253`*^9}, 
   3.756040196972299*^9, {3.758471725651135*^9, 3.758471736021511*^9}, {
   3.758546239320672*^9, 3.758546240542976*^9}, {3.758546331896943*^9, 
   3.758546332526432*^9}, {3.75873450175458*^9, 3.758734504237145*^9}, {
   3.764082335342318*^9, 3.7640823455189333`*^9}, {3.7722339456268167`*^9, 
   3.772233955771758*^9}, 3.772234008409524*^9, {3.772235907328668*^9, 
   3.772235926414461*^9}, {3.772273264375883*^9, 3.772273265494792*^9}, 
   3.774605546945072*^9},
 CellLabel->
  "In[3189]:=",ExpressionUUID->"96da6cd2-d269-43f7-9baf-4c5c03a6af2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d2", "=", 
    RowBox[{"pcot", "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "dx"}], ",", "dy", ",", "0"}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Motor", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "''"}], " ", "''"}], " ", "''"}], " ", "''"}]}], " ",
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.75603951480786*^9, 3.756039551682685*^9}, {
   3.756039806314146*^9, 3.7560398066769457`*^9}, 3.756040200768943*^9, {
   3.758471740021578*^9, 3.758471742963792*^9}, {3.7585462460268993`*^9, 
   3.758546246794545*^9}, {3.758546334129498*^9, 3.758546334650673*^9}, {
   3.758734500653159*^9, 3.758734505671302*^9}, {3.758734600695106*^9, 
   3.7587346065719852`*^9}, {3.764082349804418*^9, 3.764082358012862*^9}, {
   3.772235928631362*^9, 3.772235930572695*^9}, 3.774605551449773*^9},
 CellLabel->
  "In[3190]:=",ExpressionUUID->"519185b0-e325-49aa-b2fa-f922fe546eb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d3", "=", 
    RowBox[{"pcot", "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "dx"}], ",", 
       RowBox[{"-", "dy"}], ",", "0"}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Motor", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"3", " ", "''"}], " ", "''"}], " ", "''"}], " ", "''"}]}], " ",
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.756039523916588*^9, 3.756039546821024*^9}, {
   3.7560398075774717`*^9, 3.756039808002633*^9}, 3.7560402018791533`*^9, {
   3.75847174507751*^9, 3.758471748388166*^9}, {3.758546249187229*^9, 
   3.758546250142984*^9}, {3.758546336776104*^9, 3.758546338486616*^9}, {
   3.758734499543429*^9, 3.758734507032936*^9}, {3.76408236115648*^9, 
   3.764082368239005*^9}, {3.772235946699422*^9, 3.7722359488200693`*^9}, 
   3.774605555321596*^9},
 CellLabel->
  "In[3191]:=",ExpressionUUID->"fc3d5197-27da-49df-9b51-84a168534b30"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d4", "=", 
    RowBox[{"pcot", "+", 
     RowBox[{"{", 
      RowBox[{"dx", ",", 
       RowBox[{"-", "dy"}], ",", "0"}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Motor", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"4", " ", "''"}], " ", "''"}], " ", "''"}], " ", "''"}]}], " ",
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.756039552741104*^9, 3.756039561105501*^9}, {
   3.7560398089435987`*^9, 3.756039809147003*^9}, 3.756040202549569*^9, {
   3.7584717511675167`*^9, 3.7584717536096478`*^9}, {3.758546252238955*^9, 
   3.7585462538325443`*^9}, {3.758546340441873*^9, 3.758546341025069*^9}, {
   3.758734497863117*^9, 3.758734508208411*^9}, {3.758734602611018*^9, 
   3.7587346096020947`*^9}, {3.764082371927737*^9, 3.7640823776889668`*^9}, {
   3.77223595047348*^9, 3.772235951036894*^9}, 3.774605558248321*^9},
 CellLabel->
  "In[3192]:=",ExpressionUUID->"63137b15-8260-4cd0-b773-86900a3ad68e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Forces (Body Frame) ", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}, 3.8670057834637613`*^9, {3.867007679903736*^9, 
   3.867007687986978*^9}},ExpressionUUID->"5cb39710-59e0-48ea-9b7c-\
f8533d9c52ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"thrust1", "=", 
   RowBox[{"kf", "*", 
    RowBox[{"u1", "^", "2"}], "*", "e3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75795142655828*^9, 3.757951443243422*^9}, {
   3.757951513122213*^9, 3.75795151782155*^9}, 3.7580448641945467`*^9, {
   3.758395539091992*^9, 3.758395539919942*^9}, 3.7583960439928513`*^9, 
   3.758455510252062*^9, 3.758734459723151*^9, 3.762263480528481*^9, 
   3.76408253525296*^9, 3.772235593987535*^9, 3.7730515296207027`*^9},
 CellLabel->
  "In[3193]:=",ExpressionUUID->"057a09d2-23a5-4adc-92bb-b1ebab93643a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"thrust2", "=", 
   RowBox[{"kf", "*", 
    RowBox[{"u2", "^", "2"}], "*", "e3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7579515278265533`*^9, 3.757951545519204*^9}, 
   3.758044865055271*^9, 3.758396044978788*^9, 3.7584555111272173`*^9, 
   3.75873446420684*^9, {3.762263481120319*^9, 3.76226348450686*^9}, 
   3.7640825387743*^9, 3.772235596194683*^9, 3.773051534806102*^9},
 CellLabel->
  "In[3194]:=",ExpressionUUID->"5429f7e1-215b-49cf-b8dd-77b8a425da3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"thrust3", "=", 
   RowBox[{"kf", "*", 
    RowBox[{"u3", "^", "2"}], "*", "e3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757951536702262*^9, 3.757951551901444*^9}, 
   3.758044865712924*^9, 3.758396045715411*^9, 3.758455511919569*^9, 
   3.758734465423217*^9, {3.762263485071081*^9, 3.762263487069311*^9}, 
   3.762264183559908*^9, {3.764082531226293*^9, 3.764082539988434*^9}, 
   3.7722355973209963`*^9, 3.773051535653726*^9},
 CellLabel->
  "In[3195]:=",ExpressionUUID->"3a2eb3c9-f828-4433-83e6-e34a47dc236c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"thrust4", "=", 
   RowBox[{"kf", "*", 
    RowBox[{"u4", "^", "2"}], "*", "e3"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.757951553634617*^9, 3.757951558863002*^9}, 
   3.758044866846974*^9, 3.758396046407238*^9, 3.758455513107126*^9, 
   3.758734470073333*^9, 3.762263487696802*^9, 3.764082540538844*^9, 
   3.7722355984090147`*^9, 3.7730515367337103`*^9},
 CellLabel->
  "In[3196]:=",ExpressionUUID->"f8e99797-437a-4e8f-8809-50d97771fc0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Motor Dynamics", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}, 3.8670057834637613`*^9, {3.867006053463563*^9, 
   3.86700605594121*^9}},ExpressionUUID->"22f3cf5f-327b-4c56-bb93-\
52de4456ff6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"udot", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"k\[Tau]", "/", "jb"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"uc", "-", "u"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7746045438848267`*^9, 3.774604556989874*^9}, {
   3.7746046081634693`*^9, 3.774604640436426*^9}, 3.774604743033059*^9},
 CellLabel->
  "In[3197]:=",ExpressionUUID->"fa828255-df86-423d-ae52-f6c3fbf832d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Moments (Body Fixed Frame)", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}, 3.8670057834637613`*^9, {3.867006053463563*^9, 
   3.86700605594121*^9}, {3.867006110696925*^9, 
   3.867006114642933*^9}},ExpressionUUID->"eed106ef-c2a2-46fd-9cce-\
4689cd949a3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m1", "=", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"d1", ",", "thrust1"}], "]"}], "-", 
    RowBox[{"km", "*", 
     RowBox[{"u1", "^", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "1"}], "*", "e3"}], "-", 
    RowBox[{"jb", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "1"}], "*", 
     RowBox[{"udot", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756040036329192*^9, 3.756040172530508*^9}, 
   3.7560402217123137`*^9, 3.75770062641558*^9, 3.757702016195484*^9, {
   3.75795156814325*^9, 3.757951585632266*^9}, {3.757953460386321*^9, 
   3.757953460636443*^9}, {3.757953497514186*^9, 3.757953498549055*^9}, {
   3.7583955141823673`*^9, 3.758395514831827*^9}, 3.7583957543070097`*^9, {
   3.758395871236157*^9, 3.7583958746953917`*^9}, {3.7583959101721992`*^9, 
   3.758395938289886*^9}, {3.7584542446380043`*^9, 3.7584542447340193`*^9}, {
   3.762263510171221*^9, 3.762263532385708*^9}, {3.7622639613245573`*^9, 
   3.762264000834099*^9}, {3.764082656439076*^9, 3.7640826572879*^9}, 
   3.764082700477016*^9, {3.764082801248012*^9, 3.7640828014769382`*^9}, {
   3.7640832392008743`*^9, 3.764083240016637*^9}, {3.7640843460691977`*^9, 
   3.7640843463089*^9}, {3.764085303794537*^9, 3.7640853043239803`*^9}, {
   3.7640853389650784`*^9, 3.764085358177185*^9}, {3.764085392976615*^9, 
   3.764085422286948*^9}, {3.764244984755836*^9, 3.764244987105857*^9}, 
   3.772231283224943*^9, {3.772231809142022*^9, 3.772231809838697*^9}, {
   3.7722321913441257`*^9, 3.772232192533791*^9}, {3.77305030022265*^9, 
   3.773050301691352*^9}, {3.773050482449195*^9, 3.7730504919147997`*^9}, {
   3.773050541148355*^9, 3.773050543627967*^9}, {3.77305945497192*^9, 
   3.773059455043643*^9}, {3.773059831195445*^9, 3.773059835429487*^9}, {
   3.7730600064473133`*^9, 3.77306000783217*^9}, {3.774432607207987*^9, 
   3.774432607423513*^9}},
 CellLabel->
  "In[3198]:=",ExpressionUUID->"911819c7-1394-47a9-b2bb-dd224bdb37f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m2", "=", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"d2", ",", "thrust2"}], "]"}], "-", 
    RowBox[{"km", "*", 
     RowBox[{"u2", "^", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "2"}], "*", "e3"}], "-", 
    RowBox[{"jb", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "2"}], "*", 
     RowBox[{"udot", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756040219406376*^9, 3.756040243526084*^9}, 
   3.757702019073143*^9, {3.7579515756893806`*^9, 3.757951592534459*^9}, {
   3.7579534618902473`*^9, 3.757953461969782*^9}, {3.75795350224627*^9, 
   3.757953503554842*^9}, {3.758395521740415*^9, 3.758395522415595*^9}, 
   3.7583957556109133`*^9, {3.758454242321986*^9, 3.7584542424558163`*^9}, {
   3.762263526929575*^9, 3.762263528537956*^9}, {3.762264258317829*^9, 
   3.762264267403202*^9}, 3.7640826612181683`*^9, 3.764082702602029*^9, {
   3.7640828040180817`*^9, 3.764082805188879*^9}, 3.764083243498699*^9, {
   3.764084349756907*^9, 3.764084350146482*^9}, {3.764085306498057*^9, 
   3.764085306872307*^9}, {3.764085342106373*^9, 3.764085355474312*^9}, {
   3.764085394970931*^9, 3.764085395310481*^9}, {3.764085425497408*^9, 
   3.764085426018897*^9}, {3.764244992135667*^9, 3.764244994089484*^9}, 
   3.772231284761904*^9, {3.7722318034576483`*^9, 3.772231805749572*^9}, {
   3.773050498291586*^9, 3.773050504328603*^9}, {3.773050547077814*^9, 
   3.773050549181427*^9}, {3.7730594569616747`*^9, 3.7730594570596943`*^9}, {
   3.773059838428954*^9, 3.773059839225272*^9}, {3.773060003738948*^9, 
   3.773060005206596*^9}, {3.774432611362296*^9, 3.774432611873836*^9}},
 CellLabel->
  "In[3199]:=",ExpressionUUID->"d607ac28-7c40-458e-9141-44e6769ad788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m3", "=", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"d3", ",", "thrust3"}], "]"}], "-", 
    RowBox[{"km", "*", 
     RowBox[{"u3", "^", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "3"}], "*", "e3"}], "-", 
    RowBox[{"jb", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "3"}], "*", 
     RowBox[{"udot", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756040253333352*^9, 3.756040265839901*^9}, 
   3.757702021176033*^9, {3.757951596526657*^9, 3.7579515993818693`*^9}, {
   3.7579534626945267`*^9, 3.7579534627542953`*^9}, {3.757953506809463*^9, 
   3.757953507864813*^9}, {3.758395525121969*^9, 3.758395525785776*^9}, 
   3.758395756904746*^9, {3.758454240012115*^9, 3.758454240145257*^9}, {
   3.76226353732283*^9, 3.762263538217991*^9}, {3.762264273858906*^9, 
   3.762264282892911*^9}, 3.764082664022064*^9, 3.764082703437978*^9, {
   3.764082809206002*^9, 3.7640828094069853`*^9}, 3.764083244191059*^9, {
   3.764084352425131*^9, 3.7640843527127666`*^9}, {3.764085308423441*^9, 
   3.764085311788075*^9}, {3.764085346602352*^9, 3.764085350037403*^9}, {
   3.764085396416292*^9, 3.764085396984923*^9}, {3.764085428167448*^9, 
   3.7640854284950113`*^9}, {3.764244996387541*^9, 3.764244996778138*^9}, 
   3.7722312878692207`*^9, {3.772231797042677*^9, 3.7722317996485786`*^9}, {
   3.77305051005121*^9, 3.773050513167548*^9}, {3.7730505526589518`*^9, 
   3.7730505548089046`*^9}, {3.773059459136384*^9, 3.7730594592341127`*^9}, {
   3.773059841535284*^9, 3.773059842251474*^9}, {3.773060001577039*^9, 
   3.773060002435875*^9}, {3.77443261687801*^9, 3.7744326169917192`*^9}},
 CellLabel->
  "In[3200]:=",ExpressionUUID->"1aaad0e8-095a-4015-984e-f755cd7ead00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m4", "=", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"d4", ",", "thrust4"}], "]"}], "-", 
    RowBox[{"km", "*", 
     RowBox[{"u4", "^", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "4"}], "*", "e3"}], "-", 
    RowBox[{"jb", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "4"}], "*", 
     RowBox[{"udot", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756040271542074*^9, 3.756040284640243*^9}, 
   3.757702024324527*^9, {3.757951603026972*^9, 3.757951605520262*^9}, {
   3.757953463555752*^9, 3.7579534638067837`*^9}, {3.757953510003937*^9, 
   3.757953511117161*^9}, {3.758395527790114*^9, 3.758395528487893*^9}, 
   3.758395758336836*^9, {3.75839579782194*^9, 3.758395822811322*^9}, {
   3.75845423770537*^9, 3.758454237799317*^9}, {3.762263542089929*^9, 
   3.7622635426379766`*^9}, {3.762264340715125*^9, 3.762264344162916*^9}, 
   3.764082666665942*^9, 3.764082704135906*^9, {3.7640828121411953`*^9, 
   3.764082812345251*^9}, 3.764083244919251*^9, {3.764084354602456*^9, 
   3.7640843565531054`*^9}, {3.764085313906541*^9, 3.764085314248337*^9}, {
   3.7640853982763443`*^9, 3.764085398656892*^9}, {3.764085430807181*^9, 
   3.764085431120536*^9}, {3.7642449990718527`*^9, 3.76424499947423*^9}, 
   3.772231289862534*^9, {3.7722317952383623`*^9, 3.7722318015004177`*^9}, {
   3.773050516891074*^9, 3.773050520227454*^9}, {3.773050558202599*^9, 
   3.773050562345964*^9}, {3.7730594610806503`*^9, 3.773059461158258*^9}, {
   3.773059844433662*^9, 3.773059845213615*^9}, {3.77305998950488*^9, 
   3.773059990604545*^9}, {3.7744326205545177`*^9, 3.774432620645371*^9}},
 CellLabel->
  "In[3201]:=",ExpressionUUID->"d942a837-4ebe-4897-87c4-c69e6a4a7418"],

Cell["Net force and moment (both body frame):", "Text",
 CellChangeTimes->{{3.756040310762772*^9, 
  3.756040346889411*^9}},ExpressionUUID->"26b46362-74cb-4616-b72c-\
e5ddd0b18a0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"thrust1", "+", "thrust2", "+", "thrust3", "+", "thrust4", "-", 
    RowBox[{"dragmat", ".", "v"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756040322732485*^9, 3.7560403333507147`*^9}, {
  3.7560405506014757`*^9, 3.756040553666815*^9}, {3.756485494244287*^9, 
  3.756485495369195*^9}, {3.772231828135797*^9, 3.772231861735393*^9}, {
  3.7748158635831833`*^9, 3.7748158742623863`*^9}, {3.7748159265127573`*^9, 
  3.7748159344034653`*^9}, {3.774816055904429*^9, 3.774816058076336*^9}},
 CellLabel->
  "In[3202]:=",ExpressionUUID->"6d87da77-feae-4799-833a-3c20691df1d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"m1", "+", "m2", "+", "m3", "+", "m4", " ", "+", 
    RowBox[{"kflap", "*", 
     RowBox[{"Cross", "[", 
      RowBox[{"v", ",", "e3"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756040336713187*^9, 3.756040363371398*^9}, 
   3.756040522365259*^9, 3.756040555661726*^9, {3.756485490168931*^9, 
   3.756485497937858*^9}, {3.771927257058117*^9, 3.771927259008404*^9}, {
   3.7722318125705233`*^9, 3.772231816913053*^9}, {3.772232196276165*^9, 
   3.77223221034296*^9}, {3.772273303636059*^9, 3.7722733662727337`*^9}, {
   3.772274181770595*^9, 3.772274185251609*^9}, {3.7748159387734547`*^9, 
   3.77481594337363*^9}},
 CellLabel->
  "In[3203]:=",ExpressionUUID->"a52c7592-5042-4cb6-9990-877e24b6be00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Rotation Dynamics", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}, 3.8670057834637613`*^9, {3.867006053463563*^9, 
   3.86700605594121*^9}, {3.867006110696925*^9, 3.867006114642933*^9}, {
   3.867006173064295*^9, 
   3.8670061759220457`*^9}},ExpressionUUID->"a20c2b01-48f5-4bcd-9328-\
21478cd6d324"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]dot", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", "jmat", "]"}], ".", "m"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7560408466660843`*^9, 3.75604093389669*^9}, {
   3.756041736822938*^9, 3.75604174572441*^9}, 3.7561303992917643`*^9, 
   3.756130437272191*^9, {3.757702300974175*^9, 3.757702302066421*^9}, {
   3.757772385592759*^9, 3.757772409587028*^9}, {3.758048540850836*^9, 
   3.758048543291956*^9}, {3.7582337655415087`*^9, 3.758233766022655*^9}, {
   3.7583942983026457`*^9, 3.758394300562694*^9}, {3.758394376673007*^9, 
   3.758394385196617*^9}, {3.7583958083920317`*^9, 3.758395809499373*^9}, {
   3.758396002122397*^9, 3.75839603712536*^9}, {3.7584536792594213`*^9, 
   3.7584536948634233`*^9}, {3.758454030538846*^9, 3.758454133696044*^9}, {
   3.7584541655827*^9, 3.758454257062108*^9}, {3.758454888236464*^9, 
   3.758454923357912*^9}, 3.758455058159569*^9, {3.75845525073289*^9, 
   3.758455253323701*^9}, 3.75845534135106*^9, {3.758455411764295*^9, 
   3.758455414539473*^9}, {3.7584615864170637`*^9, 3.758461613012867*^9}, {
   3.758734690143412*^9, 3.758734732721506*^9}, {3.7587347672238894`*^9, 
   3.758734771660845*^9}, {3.759061252258224*^9, 3.759061257704854*^9}, {
   3.762263584165152*^9, 3.7622636084266*^9}, 3.764249849971678*^9, {
   3.771927292524688*^9, 3.771927312021104*^9}, {3.771927564904682*^9, 
   3.771927574962199*^9}, {3.771927612496971*^9, 3.771927616821629*^9}, {
   3.7722295822125597`*^9, 3.7722295849120283`*^9}, {3.77223540428544*^9, 
   3.772235429304103*^9}, {3.7744327147571163`*^9, 3.77443271579073*^9}, {
   3.774604207299983*^9, 3.774604228918518*^9}, {3.774963653168107*^9, 
   3.774963691418481*^9}, {3.774964482854985*^9, 3.7749644865076523`*^9}},
 CellLabel->
  "In[3204]:=",ExpressionUUID->"4691813d-c0d5-4030-a862-8632cbf34d1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Translation Dynamics", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}, 3.8670057834637613`*^9, {3.867006053463563*^9, 
   3.86700605594121*^9}, {3.867006110696925*^9, 3.867006114642933*^9}, {
   3.867006173064295*^9, 
   3.867006199014982*^9}},ExpressionUUID->"d97df236-a906-4bae-bbeb-\
f4d9f2c5efd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vdot", "=", 
   RowBox[{
    RowBox[{"f", "/", "mass"}], "-", 
    RowBox[{"g", "*", 
     RowBox[{
      RowBox[{"Transpose", "[", "r", "]"}], ".", "e3"}]}], "-", 
    RowBox[{"Cross", "[", 
     RowBox[{"\[Omega]", ",", "v"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756485156279992*^9, 3.756485287018405*^9}, 
   3.756485473384156*^9, {3.756485504529461*^9, 3.756485504811803*^9}, {
   3.758395606806786*^9, 3.758395634256319*^9}, 3.75846163655302*^9, {
   3.772233107281015*^9, 3.772233128524048*^9}, {3.7722331870217533`*^9, 
   3.772233208411207*^9}, 3.7746042426716633`*^9, {3.774819373104702*^9, 
   3.77481937323713*^9}, {3.774819461425188*^9, 3.774819461583888*^9}},
 CellLabel->
  "In[3205]:=",ExpressionUUID->"fcae2a89-d934-4160-a8e4-73affb66497f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Rotation Kinematics", "Subsection"]], "Section",
 CellChangeTimes->{{3.7511138259200907`*^9, 3.751113829552498*^9}, {
   3.751114011425928*^9, 3.75111402228336*^9}, {3.751114827393429*^9, 
   3.751114827655126*^9}, 3.867005690567973*^9, {3.867005729940209*^9, 
   3.867005733254025*^9}, 3.8670057834637613`*^9, {3.867006053463563*^9, 
   3.86700605594121*^9}, {3.867006110696925*^9, 3.867006114642933*^9}, {
   3.867006173064295*^9, 3.867006199014982*^9}, {3.867006240951548*^9, 
   3.867006245914481*^9}},ExpressionUUID->"7a179e78-5219-453f-b56b-\
13c32e3c8145"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"r", ".", "\[Omega]hat"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"s1", "[", "t", "]"}], ",", "t"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"s2", "[", "t", "]"}], ",", "t"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], ",", "t"}], "]"}]}], "}"}]}], 
      "]"}], "]"}], " ", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7515499602560368`*^9, 3.751550052598084*^9}, {
   3.751550126419127*^9, 3.7515501305081797`*^9}, {3.751550209195814*^9, 
   3.751550271334059*^9}, {3.751552048435905*^9, 3.751552053799458*^9}, {
   3.7515521101038847`*^9, 3.751552110633917*^9}, {3.7515522440924473`*^9, 
   3.751552244648061*^9}, {3.756130267213147*^9, 3.756130279195876*^9}, 
   3.7746047571647453`*^9},
 CellLabel->
  "In[3206]:=",ExpressionUUID->"0374ff1a-cf9f-4479-b0ea-9d714be09e26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sdot", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"s1", "[", "t", "]"}], ",", "t"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"s2", "[", "t", "]"}], ",", "t"}], "]"}]}], "}"}], "/.", 
    "rules"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756130324800556*^9, 3.756130368769174*^9}, {
  3.756488145251725*^9, 3.756488145784782*^9}},
 CellLabel->
  "In[3207]:=",ExpressionUUID->"1375217c-43db-46f8-8133-831ba45f2b76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observability Analysis", "Section",
 CellChangeTimes->{{3.866999833750265*^9, 3.866999836162888*^9}, {
  3.866999890527474*^9, 3.866999891121808*^9}, {3.867000396540119*^9, 
  3.867000399440076*^9}},ExpressionUUID->"c960d5d2-54f9-4bdb-8c53-\
09ff4c6dd3c6"],

Cell[TextData[StyleBox["System Definition (User Defined)", "Subsubsection"]], \
"Text",
 CellChangeTimes->{{3.866999833750265*^9, 3.866999836162888*^9}, {
  3.866999890527474*^9, 3.866999891121808*^9}, {3.867000687774873*^9, 
  3.867000690325183*^9}, {3.8670008446957493`*^9, 
  3.867000854686139*^9}},ExpressionUUID->"b7c64a15-36cb-4936-ab47-\
31f5a2acc9bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"statevec", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "s", ",", "v", ",", "\[Omega]", ",", "u", ",", "ba", ",", "bg", ",", 
     "k"}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "state", " ", "vector", " ", "here"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.866999911679509*^9, 3.866999923097756*^9}, 
   3.867000031003233*^9, 3.867000085701687*^9, {3.867000694961228*^9, 
   3.8670006992815313`*^9}, {3.867004132396029*^9, 3.8670041328041353`*^9}, 
   3.86700422826579*^9, {3.867004263338258*^9, 3.867004266658218*^9}, {
   3.867004478799767*^9, 3.867004482514771*^9}, {3.867004983015353*^9, 
   3.867004985485757*^9}, {3.867005820207108*^9, 3.867005829920927*^9}},
 CellLabel->
  "In[3208]:=",ExpressionUUID->"161b6327-6277-442b-a7ab-f431494c093f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputvec", "=", "uc"}], " ", ";", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "input", " ", "vector", " ", "here"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.857792699297677*^9, 3.8577927054333277`*^9}, {
   3.866999788614802*^9, 3.866999802587315*^9}, 3.866999845029114*^9, 
   3.867000016560775*^9, {3.8670007024485893`*^9, 3.867000706098385*^9}, {
   3.8670015478811083`*^9, 3.8670015651953497`*^9}, {3.8670021878484373`*^9, 
   3.867002210324353*^9}, {3.8670041357139463`*^9, 3.867004137166994*^9}, 
   3.867004225536677*^9, {3.8670042708717012`*^9, 3.8670042771802464`*^9}, 
   3.867005015526964*^9, {3.867005058524638*^9, 3.8670051046524343`*^9}, 
   3.867005205421286*^9, {3.86700614988501*^9, 3.867006151106716*^9}, 
   3.867006455800234*^9},
 CellLabel->
  "In[3209]:=",ExpressionUUID->"521a2934-287d-408a-a547-cd62970d6d68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"outputvec", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "/", "mass"}], "+", 
       RowBox[{"\[Omega]hat", ".", "\[Omega]hat", ".", "pimu"}], "+", 
       RowBox[{"Cross", "[", 
        RowBox[{"\[Omega]dot", ",", "pimu"}], "]"}], "+", "ba"}], ",", 
      RowBox[{"\[Omega]", "+", "bg"}], ",", "u"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Define", " ", "output", " ", "vector", " ", "here", " ", "in", " ", 
    "terms", " ", "of", " ", "states", " ", "and", " ", "inputs"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8578557114521427`*^9, 3.8578557235448017`*^9}, {
   3.857855784376595*^9, 3.8578559197436657`*^9}, {3.8583683449650784`*^9, 
   3.858368366634989*^9}, {3.858368861200038*^9, 3.8583688615946836`*^9}, {
   3.858370193314104*^9, 3.858370194254755*^9}, {3.858371029059291*^9, 
   3.8583710390520678`*^9}, {3.866999993332439*^9, 3.86699999475638*^9}, {
   3.867000642605274*^9, 3.867000657038066*^9}, {3.867004143115171*^9, 
   3.867004143319043*^9}, 3.867004220816371*^9, {3.867004281232595*^9, 
   3.8670042821760693`*^9}, {3.867004489888912*^9, 3.867004492549535*^9}, 
   3.867005047019641*^9, {3.867005120428405*^9, 3.867005120506328*^9}, 
   3.867006323875682*^9},
 CellLabel->
  "In[3210]:=",ExpressionUUID->"84beffc6-4c4b-4405-9e0c-70f0a129e411"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vecfield", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"sdot", ",", "vdot", ",", "\[Omega]dot", ",", "udot", ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Length", "[", "statevec", "]"}], "-", "12"}]}], "]"}]}], 
    "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "vector", " ", "field", " ", "here"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8578549929019003`*^9, 3.857855033338434*^9}, {
   3.8583682429363947`*^9, 3.8583682542319403`*^9}, {3.858368291149247*^9, 
   3.858368298100379*^9}, {3.867000090599835*^9, 3.867000091990059*^9}, {
   3.867000721652998*^9, 3.867000725844079*^9}, {3.867004149428616*^9, 
   3.867004149628437*^9}, 3.867004217922574*^9, {3.867004285889604*^9, 
   3.867004286111744*^9}, {3.867004501082259*^9, 3.867004515730856*^9}, 
   3.867005062433082*^9, {3.8670051644799547`*^9, 3.867005193084306*^9}, {
   3.8670062907690563`*^9, 3.867006294472129*^9}},
 CellLabel->
  "In[3211]:=",ExpressionUUID->"7283ffaa-2beb-477e-aa18-097d4ed181e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lieseq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Which", " ", "Lie", " ", "derivatives", " ", "to", " ", 
    RowBox[{"take", ".", " ", "Empty"}], " ", "set", " ", "is", " ", "the", 
    " ", "output", " ", "function", " ", "itself"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.858369085481155*^9, 3.858369121715797*^9}, {
   3.8583693773467407`*^9, 3.858369383487494*^9}, 3.8583694530385227`*^9, {
   3.8583699574005337`*^9, 3.858369968305492*^9}, {3.85837009091819*^9, 
   3.858370094556326*^9}, {3.8583715104639273`*^9, 3.858371510933118*^9}, {
   3.858371658631997*^9, 3.8583716592799797`*^9}, {3.8583717402547283`*^9, 
   3.8583717572459297`*^9}, {3.858371791610064*^9, 3.8583717930437727`*^9}, {
   3.867000826516206*^9, 3.867000866197996*^9}, {3.8670041562009068`*^9, 
   3.867004213779434*^9}, {3.867004291170104*^9, 3.867004314400408*^9}, {
   3.867004428229884*^9, 3.867004429111272*^9}, {3.86700524153723*^9, 
   3.8670052448731613`*^9}, {3.867006343234273*^9, 3.867006348094269*^9}, {
   3.86700679337521*^9, 3.867006798151257*^9}},
 CellLabel->
  "In[3212]:=",ExpressionUUID->"1f88d0ad-08fc-4533-abee-adeeb25c66f6"],

Cell[TextData[StyleBox["Automated Analysis", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.866999833750265*^9, 3.866999836162888*^9}, {
  3.866999890527474*^9, 3.866999891121808*^9}, {3.867000687774873*^9, 
  3.867000690325183*^9}, {3.867000749774502*^9, 
  3.867000789038171*^9}},ExpressionUUID->"c4a37193-9f30-4da8-99f9-\
a04a51fa0b66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rule0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"inputvec", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "inputvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8670018852884073`*^9, 3.8670019202711363`*^9}, 
   3.867002045042115*^9, 3.867002218613721*^9, {3.867002505487557*^9, 
   3.867002506644843*^9}, 3.8670025945332212`*^9},
 CellLabel->
  "In[3213]:=",ExpressionUUID->"17a3e2b9-868d-4969-882e-ee208194bcdf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vecfield0", "=", 
   RowBox[{"vecfield", "/.", "rule0"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867003859471212*^9, 3.867003874604765*^9}},
 CellLabel->
  "In[3214]:=",ExpressionUUID->"632fda03-ccec-4d49-b1a0-df1008f789f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"inputvec", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "->", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", "j"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "inputvec", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "inputvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8670019534840937`*^9, 3.8670020480012074`*^9}, 
   3.867002220049691*^9, {3.867002500069784*^9, 3.867002501798456*^9}, {
   3.8670025614659367`*^9, 3.8670025654894657`*^9}, 3.86700259579496*^9},
 CellLabel->
  "In[3215]:=",ExpressionUUID->"e66e8673-db00-4767-8e46-7cc477c29e69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cavecfields", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"vecfield", "-", "vecfield0"}], "/.", 
      RowBox[{"rules", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "inputvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.867000878024225*^9, 3.867000910430612*^9}, {
   3.8670009764430647`*^9, 3.867000989111466*^9}, {3.867001020222377*^9, 
   3.867001087714942*^9}, {3.867001154741754*^9, 3.867001204665612*^9}, {
   3.867001250803542*^9, 3.867001311829443*^9}, {3.8670013529395514`*^9, 
   3.86700136812969*^9}, {3.867001632701479*^9, 3.867001714270548*^9}, {
   3.867002269277337*^9, 3.867002334776029*^9}, {3.867002371640764*^9, 
   3.867002415962069*^9}, {3.867002461513464*^9, 3.867002461804837*^9}, 
   3.867002605760519*^9, 3.8670026664822206`*^9, {3.867003893897324*^9, 
   3.867003930984621*^9}, 3.8670039748591957`*^9, {3.867004328723596*^9, 
   3.867004339077692*^9}},
 CellLabel->
  "In[3216]:=",ExpressionUUID->"23ca38a2-125c-4e9d-a320-765c81d62d3b"],

Cell[BoxData[
 RowBox[{"vecfields", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "vecfield0", "}"}], ",", "cavecfields"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.867003944643764*^9, 3.867003962192892*^9}, 
   3.867004346900888*^9, 3.867004552512645*^9, 3.867007209592217*^9, {
   3.867007331018671*^9, 3.8670073458921003`*^9}},
 CellLabel->
  "In[3217]:=",ExpressionUUID->"c8182a45-bb5b-4604-a36c-f0f573cb982a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LieIterate", "[", 
    RowBox[{"h_", ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Grad", "[", 
     RowBox[{"h", ",", "statevec"}], "]"}], ".", 
    RowBox[{"vecfields", "[", 
     RowBox[{"[", 
      RowBox[{"i", "+", "1"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.858370694051918*^9, 3.8583707717937603`*^9}, {
   3.858370924461882*^9, 3.858370933477372*^9}, {3.8583709684603*^9, 
   3.8583709827849607`*^9}, 3.858371231559536*^9, {3.867000011462678*^9, 
   3.867000012362355*^9}, {3.867000183579576*^9, 3.8670001989601603`*^9}, {
   3.8670039800777597`*^9, 3.867003981312199*^9}},
 CellLabel->
  "In[3218]:=",ExpressionUUID->"023c0288-11f0-461a-ac4c-7a648fde8fb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LieDerivative", "[", 
    RowBox[{"h_", ",", "seq_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{"LieIterate", ",", "h", ",", "seq"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.858370199002461*^9, 3.858370290694448*^9}, {
  3.858370325977517*^9, 3.858370484051387*^9}, {3.858370523871601*^9, 
  3.8583706226072893`*^9}, {3.858370790279188*^9, 3.8583707917611437`*^9}, {
  3.858370853343783*^9, 3.8583708878805943`*^9}, {3.858370937112349*^9, 
  3.8583709374667883`*^9}, {3.858370988342589*^9, 3.858371006210103*^9}},
 CellLabel->
  "In[3219]:=",ExpressionUUID->"ba090ca9-70b9-4fff-888f-2014de4d1e66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lies", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"LieDerivative", "[", 
      RowBox[{"outputvec", ",", 
       RowBox[{"lieseq", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lieseq", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.858369151398221*^9, 3.858369153835546*^9}, {
   3.8583692600762033`*^9, 3.85836931097908*^9}, {3.858369345408002*^9, 
   3.858369361868637*^9}, {3.858369398605341*^9, 3.858369450049843*^9}, {
   3.8583695239609613`*^9, 3.858369554130866*^9}, {3.858369779500404*^9, 
   3.858369929600534*^9}, {3.858369978595498*^9, 3.858369985012974*^9}, {
   3.8583700239907293`*^9, 3.858370024270218*^9}, {3.858371280870678*^9, 
   3.858371336447896*^9}, {3.858371582171386*^9, 3.858371582624586*^9}, {
   3.866999999560652*^9, 3.867000001824382*^9}, 3.867000308184389*^9, {
   3.867002616189268*^9, 3.867002620333054*^9}, {3.867004397898878*^9, 
   3.867004403114687*^9}},
 CellLabel->
  "In[3220]:=",ExpressionUUID->"66ffd9f0-f9c1-41c8-a3e7-b21609ebc59e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obsvec", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "lies", "]"}], ",", "0"}], "]"}], "]"}]}], ";", 
  RowBox[{"MatrixForm", "[", "obsvec", "]"}]}]], "Input",
 CellChangeTimes->{{3.858371600324891*^9, 3.8583716369404173`*^9}, 
   3.8670009224022083`*^9, {3.867004373024466*^9, 3.867004381488009*^9}, 
   3.8670045652896976`*^9, {3.867004724035385*^9, 3.867004734079205*^9}, {
   3.8670077649074583`*^9, 3.8670077728332977`*^9}},
 CellLabel->
  "In[3221]:=",ExpressionUUID->"6f40dcf7-50f4-4c59-bfa7-009471f79619"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obsmat", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Grad", "[", 
     RowBox[{"obsvec", ",", "statevec"}], "]"}], "]"}]}], ";", 
  RowBox[{"MatrixForm", "[", "obsmat", "]"}]}]], "Input",
 CellChangeTimes->{{3.857856539793783*^9, 3.857856557081381*^9}, {
   3.8578569320652313`*^9, 3.8578569483156137`*^9}, {3.866999976482554*^9, 
   3.8669999784650106`*^9}, {3.86700013654547*^9, 3.8670001577633*^9}, 
   3.867000933482087*^9, {3.867002633201047*^9, 3.867002641964204*^9}, {
   3.867003992573123*^9, 3.8670040083396683`*^9}, 3.86700424011375*^9},
 CellLabel->
  "In[3222]:=",ExpressionUUID->"975b9bf8-2216-4700-a1dc-3feb4f509ac5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"unobssubspace", "=", 
     RowBox[{"NullSpace", "[", "obsmat", "]"}]}], ";", 
    RowBox[{"MatrixForm", "[", "unobssubspace", "]"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "probably", " ", "takes", " ", "forever", " ", "to", " ", 
    "run"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.867004013931185*^9, 3.867004041214768*^9}, 
   3.867004574569043*^9, {3.8670046309385433`*^9, 3.867004662163125*^9}, 
   3.867004741669159*^9, {3.8670066171331177`*^9, 3.8670066451094093`*^9}, {
   3.867006675356818*^9, 3.867006676147439*^9}},
 CellLabel->
  "In[3223]:=",ExpressionUUID->"5fab7b67-210e-4cea-ab02-ac1afd43e909"],

Cell[BoxData[
 RowBox[{"isobservable", "=", 
  RowBox[{
   RowBox[{"MatrixRank", "[", "obsmat", "]"}], "==", 
   RowBox[{"Length", "[", "statevec", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8578567286674023`*^9, 3.857856732916836*^9}, {
  3.857857088963273*^9, 3.857857095620955*^9}, {3.866999953736189*^9, 
  3.866999955029666*^9}, {3.86700262375004*^9, 3.867002626131885*^9}},
 CellLabel->
  "In[3224]:=",ExpressionUUID->"ac601703-d0c3-4070-ad20-205b3b5a673b"]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1389, 762},
WindowMargins->{{0, Automatic}, {0, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[(
            CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{
            CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"aa769a43-22a7-4529-b1ab-9a32bea902bf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 333, 6, 77, "Input",ExpressionUUID->"2b308678-3604-43aa-ae10-741b584ac491",
 Evaluatable->False],
Cell[894, 28, 238, 4, 38, "Text",ExpressionUUID->"80ef05ea-2dd7-4bad-bb24-a63a1d5e7b62"],
Cell[1135, 34, 458, 9, 63, "Text",ExpressionUUID->"3d680064-25c7-40bd-b279-94f51fe1e624"],
Cell[1596, 45, 316, 6, 48, "Input",ExpressionUUID->"38b72558-f8d6-4a2d-bbec-e5e7273bebce"],
Cell[1915, 53, 397, 6, 74, "Section",ExpressionUUID->"d3692466-f00a-4be7-9fa2-58614f963091"],
Cell[CellGroupData[{
Cell[2337, 63, 206, 3, 46, "Section",ExpressionUUID->"a4bb7b95-2a76-4708-9828-eeb01f539d1c"],
Cell[2546, 68, 361, 7, 38, "Text",ExpressionUUID->"4d0aefaf-f308-4361-a322-92dbc4cb4f42"],
Cell[2910, 77, 1863, 50, 72, "Input",ExpressionUUID->"7724a05c-48bb-404d-a219-011a446cd0cd"],
Cell[4776, 129, 525, 13, 48, "Input",ExpressionUUID->"b83e0dc7-5a3c-4ad7-baef-3e4e3b85a345"],
Cell[5304, 144, 684, 17, 48, "Input",ExpressionUUID->"d22127b0-7015-423b-9c03-d22b070ddba2"],
Cell[5991, 163, 910, 23, 48, "Input",ExpressionUUID->"24bc4cbd-efb1-43e1-bd2f-6c34f42b1cc8"],
Cell[6904, 188, 659, 14, 48, "Input",ExpressionUUID->"e27dc6cb-c033-4517-9248-cdb2872beedb"],
Cell[7566, 204, 1220, 35, 48, "Input",ExpressionUUID->"c36491c2-f2b8-486f-8eb4-4b31e919a46a"],
Cell[8789, 241, 838, 19, 48, "Input",ExpressionUUID->"2af9b222-579a-4b35-ab74-1c966026508b"],
Cell[9630, 262, 1211, 29, 48, "Input",ExpressionUUID->"6830e553-1075-4394-80c5-820ace3d82cd"],
Cell[10844, 293, 711, 16, 48, "Input",ExpressionUUID->"d8687452-0f60-4f72-8e36-82a667523588"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11592, 314, 374, 5, 62, "Section",ExpressionUUID->"8a3902a4-6402-46b3-b8de-72f105469d87"],
Cell[11969, 321, 546, 14, 48, "Input",ExpressionUUID->"d8e5eb82-4f22-49f9-8d29-886b24a67967"],
Cell[12518, 337, 594, 14, 48, "Input",ExpressionUUID->"64726bf9-227e-4072-b559-f999fa626dcb"],
Cell[13115, 353, 589, 15, 48, "Input",ExpressionUUID->"01f82bc7-6faf-44f6-8615-6fed6f9791a4"],
Cell[13707, 370, 384, 10, 48, "Input",ExpressionUUID->"644c0d5e-273d-49c6-a2ce-a3d65c7fc661"],
Cell[14094, 382, 481, 11, 48, "Input",ExpressionUUID->"e7da03a4-44c2-4dc9-af7d-f625e6eef33c"],
Cell[14578, 395, 531, 12, 48, "Input",ExpressionUUID->"7d510011-c0bd-409b-ab4b-d27cab5ffb09"],
Cell[15112, 409, 427, 11, 48, "Input",ExpressionUUID->"92e7f78e-5e12-4462-954b-9c8120dbc2ab"],
Cell[15542, 422, 601, 15, 48, "Input",ExpressionUUID->"5b86c5a7-8159-4687-81c6-ffd94b60d3f7"],
Cell[16146, 439, 535, 12, 48, "Input",ExpressionUUID->"7fe84d8b-cbcc-4b86-9dfe-3e539c0d0240"],
Cell[16684, 453, 799, 17, 48, "Input",ExpressionUUID->"dc8168d6-1d7e-43b6-ad0e-95eeac68df3e"],
Cell[17486, 472, 489, 13, 48, "Input",ExpressionUUID->"368851d9-91e2-47b7-8098-edbb0c301477"],
Cell[17978, 487, 1430, 30, 48, "Input",ExpressionUUID->"eb4737d9-957c-4f70-9ff9-bf84de2bbb2c"],
Cell[19411, 519, 497, 12, 48, "Input",ExpressionUUID->"846aa666-d97f-4d6e-996e-3fc13b821cfd"],
Cell[19911, 533, 891, 23, 48, "Input",ExpressionUUID->"cfcf1c8b-2cee-4af0-9896-3fa04c578608"],
Cell[20805, 558, 482, 13, 48, "Input",ExpressionUUID->"ce74213e-cf80-4481-b83d-2ce8f856c89b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21324, 576, 401, 6, 62, "Section",ExpressionUUID->"2c727320-585d-4ced-bdf4-d7ba8af7cc34"],
Cell[21728, 584, 978, 20, 48, "Input",ExpressionUUID->"96da6cd2-d269-43f7-9baf-4c5c03a6af2d"],
Cell[22709, 606, 976, 23, 48, "Input",ExpressionUUID->"519185b0-e325-49aa-b2fa-f922fe546eb4"],
Cell[23688, 631, 952, 24, 48, "Input",ExpressionUUID->"fc3d5197-27da-49df-9b51-84a168534b30"],
Cell[24643, 657, 982, 23, 48, "Input",ExpressionUUID->"63137b15-8260-4cd0-b773-86900a3ad68e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25662, 685, 443, 6, 62, "Section",ExpressionUUID->"5cb39710-59e0-48ea-9b7c-f8533d9c52ca"],
Cell[26108, 693, 572, 11, 48, "Input",ExpressionUUID->"057a09d2-23a5-4adc-92bb-b1ebab93643a"],
Cell[26683, 706, 497, 10, 48, "Input",ExpressionUUID->"5429f7e1-215b-49cf-b8dd-77b8a425da3f"],
Cell[27183, 718, 549, 11, 48, "Input",ExpressionUUID->"3a2eb3c9-f828-4433-83e6-e34a47dc236c"],
Cell[27735, 731, 477, 10, 48, "Input",ExpressionUUID->"f8e99797-437a-4e8f-8809-50d97771fc0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28249, 746, 436, 6, 62, "Section",ExpressionUUID->"22f3cf5f-327b-4c56-bb93-52de4456ff6f"],
Cell[28688, 754, 430, 11, 48, "Input",ExpressionUUID->"fa828255-df86-423d-ae52-f6c3fbf832d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29155, 770, 498, 7, 62, "Section",ExpressionUUID->"eed106ef-c2a2-46fd-9cce-4689cd949a3c"],
Cell[29656, 779, 2073, 39, 48, "Input",ExpressionUUID->"911819c7-1394-47a9-b2bb-dd224bdb37f5"],
Cell[31732, 820, 1821, 35, 48, "Input",ExpressionUUID->"d607ac28-7c40-458e-9141-44e6769ad788"],
Cell[33556, 857, 1825, 35, 48, "Input",ExpressionUUID->"1aaad0e8-095a-4015-984e-f755cd7ead00"],
Cell[35384, 894, 1820, 35, 48, "Input",ExpressionUUID->"d942a837-4ebe-4897-87c4-c69e6a4a7418"],
Cell[37207, 931, 181, 3, 38, "Text",ExpressionUUID->"26b46362-74cb-4616-b72c-e5ddd0b18a0b"],
Cell[37391, 936, 626, 11, 48, "Input",ExpressionUUID->"6d87da77-feae-4799-833a-3c20691df1d1"],
Cell[38020, 949, 766, 15, 48, "Input",ExpressionUUID->"a52c7592-5042-4cb6-9990-877e24b6be00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38823, 969, 541, 8, 62, "Section",ExpressionUUID->"a20c2b01-48f5-4bcd-9328-21478cd6d324"],
Cell[39367, 979, 1874, 30, 48, "Input",ExpressionUUID->"4691813d-c0d5-4030-a862-8632cbf34d1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41278, 1014, 542, 8, 62, "Section",ExpressionUUID->"d97df236-a906-4bae-bbeb-f4d9f2c5efd8"],
Cell[41823, 1024, 805, 17, 48, "Input",ExpressionUUID->"fcae2a89-d934-4160-a8e4-73affb66497f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42665, 1046, 587, 8, 62, "Section",ExpressionUUID->"7a179e78-5219-453f-b56b-13c32e3c8145"],
Cell[43255, 1056, 1235, 31, 48, "Input",ExpressionUUID->"0374ff1a-cf9f-4479-b0ea-9d714be09e26"],
Cell[44493, 1089, 544, 16, 48, "Input",ExpressionUUID->"1375217c-43db-46f8-8133-831ba45f2b76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45074, 1110, 262, 4, 74, "Section",ExpressionUUID->"c960d5d2-54f9-4bdb-8c53-09ff4c6dd3c6"],
Cell[45339, 1116, 359, 6, 43, "Text",ExpressionUUID->"b7c64a15-36cb-4936-ab47-31f5a2acc9bb"],
Cell[45701, 1124, 826, 17, 48, "Input",ExpressionUUID->"161b6327-6277-442b-a7ab-f431494c093f"],
Cell[46530, 1143, 884, 16, 48, "Input",ExpressionUUID->"521a2934-287d-408a-a547-cd62970d6d68"],
Cell[47417, 1161, 1403, 28, 48, "Input",ExpressionUUID->"84beffc6-4c4b-4405-9e0c-70f0a129e411"],
Cell[48823, 1191, 1086, 22, 48, "Input",ExpressionUUID->"7283ffaa-2beb-477e-aa18-097d4ed181e4"],
Cell[49912, 1215, 1479, 29, 48, "Input",ExpressionUUID->"1f88d0ad-08fc-4533-abee-adeeb25c66f6"],
Cell[51394, 1246, 341, 5, 43, "Text",ExpressionUUID->"c4a37193-9f30-4da8-99f9-a04a51fa0b66"],
Cell[51738, 1253, 610, 16, 48, "Input",ExpressionUUID->"17a3e2b9-868d-4969-882e-ee208194bcdf"],
Cell[52351, 1271, 261, 6, 48, "Input",ExpressionUUID->"632fda03-ccec-4d49-b1a0-df1008f789f1"],
Cell[52615, 1279, 894, 23, 48, "Input",ExpressionUUID->"e66e8673-db00-4767-8e46-7cc477c29e69"],
Cell[53512, 1304, 1144, 24, 48, "Input",ExpressionUUID->"23ca38a2-125c-4e9d-a320-765c81d62d3b"],
Cell[54659, 1330, 469, 11, 48, "Input",ExpressionUUID->"c8182a45-bb5b-4604-a36c-f0f573cb982a"],
Cell[55131, 1343, 738, 17, 48, "Input",ExpressionUUID->"023c0288-11f0-461a-ac4c-7a648fde8fb4"],
Cell[55872, 1362, 662, 13, 48, "Input",ExpressionUUID->"ba090ca9-70b9-4fff-888f-2014de4d1e66"],
Cell[56537, 1377, 1157, 24, 48, "Input",ExpressionUUID->"66ffd9f0-f9c1-41c8-a3e7-b21609ebc59e"],
Cell[57697, 1403, 616, 13, 48, "Input",ExpressionUUID->"6f40dcf7-50f4-4c59-bfa7-009471f79619"],
Cell[58316, 1418, 670, 13, 48, "Input",ExpressionUUID->"975b9bf8-2216-4700-a1dc-3feb4f509ac5"],
Cell[58989, 1433, 721, 16, 48, "Input",ExpressionUUID->"5fab7b67-210e-4cea-ab02-ac1afd43e909"],
Cell[59713, 1451, 463, 9, 48, "Input",ExpressionUUID->"ac601703-d0c3-4070-ad20-205b3b5a673b"]
}, Open  ]]
}
]
*)

